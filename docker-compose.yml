services:
  web:
    build:
      context: ./apps/web
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    env_file:
      - ./apps/web/.env
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000/api/v1
    depends_on:
      - api
    restart: always
    networks:
      - optima_ai_network

  api:
    build:
      context: ./apps/api
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./apps/api:/app
    env_file:
      - ./apps/api/.env
    environment:
      # Startup configuration
      - STARTUP_LOCK_ID=424242
      - DB_CONNECT_MAX_RETRIES=30
      - DB_CONNECT_DELAY_SECONDS=2.0
      - DATABASE_URL=postgresql+asyncpg://postgres:OptimaAI2024!@host.docker.internal:5435/optima_ai
      - AGENTS_DIR=/app/workspaces/
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - optima_ai_network

  postgres:
    image: postgres:15-alpine
    container_name: optima_ai_postgres
    environment:
      POSTGRES_DB: optima_ai
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: OptimaAI2024!
      POSTGRES_INITDB_ARGS: "--locale=C.UTF-8"
      LC_ALL: C.UTF-8
      LANG: C.UTF-8
    ports:
      - "5435:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d optima_ai"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - optima_ai_network

volumes:
  postgres_data:

networks:
  optima_ai_network:
    driver: bridge
