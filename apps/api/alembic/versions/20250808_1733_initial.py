"""initial

Revision ID: b93fdd101c13
Revises:
Create Date: 2025-08-08 17:33:22.796500

"""
import sqlalchemy as sa
import sqlalchemy_utils  # type: ignore
import sqlmodel

from alembic import op

# revision identifiers, used by Alembic.
revision = "b93fdd101c13"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("password", sqlalchemy_utils.types.encrypted.encrypted_type.StringEncryptedType(), nullable=True),
        sa.Column("provider", sa.Enum("PASS", "GITHUB", "MICROSOFT", name="provider"), nullable=False),
        sa.Column("email", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_users_email"), "users", ["email"], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_users_email"), table_name="users")
    op.drop_table("users")
    # drop provider enum
    op.execute("DROP TYPE IF EXISTS provider")
    # ### end Alembic commands ###
