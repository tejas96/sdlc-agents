"""create_integrations_table

Revision ID: 4286ddc6d5be
Revises: b93fdd101c13
Create Date: 2025-08-09 16:44:46.904225

"""
import sqlalchemy as sa
import sqlmodel

from alembic import op

# revision identifiers, used by Alembic.
revision = "4286ddc6d5be"
down_revision = "b93fdd101c13"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "integrations",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("auth_type", sa.Enum("OAUTH", "API_KEY", "PAT", name="authtype"), nullable=False),
        sa.Column("credentials", sa.JSON(), nullable=False),
        sa.Column("mcp_config", sa.JSON(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("created_by", sa.Integer(), nullable=False),
        sa.Column("updated_by", sa.Integer(), nullable=False),
        sa.Column("type", sa.Enum("GITHUB", "ATLASSIAN", "NOTION", name="integrationprovider"), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_unique_constraint(
        "uq_integration_type_active_created", "integrations", ["type", "is_active", "created_by"]
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("uq_integration_type_active_created", "integrations", type_="unique")
    op.drop_table("integrations")

    # Drop enum types
    op.execute("DROP TYPE IF EXISTS integrationprovider")
    op.execute("DROP TYPE IF EXISTS authtype")
    # ### end Alembic commands ###
