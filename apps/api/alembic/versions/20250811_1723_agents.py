"""agents

Revision ID: 3dec9882922b
Revises: 4286ddc6d5be
Create Date: 2025-08-11 17:23:18.237161

"""
import sqlalchemy as sa
import sqlmodel

from alembic import op

# revision identifiers, used by Alembic.
revision = "3dec9882922b"
down_revision = "4286ddc6d5be"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "ai_agents",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("name", sa.Text(), nullable=False),
        sa.Column("description", sa.Text(), nullable=False),
        sa.Column(
            "identifier", sa.Enum("CODE_ANALYSIS", "TEST_CASE_GENERATION", name="agentidentifier"), nullable=False
        ),
        sa.Column(
            "module",
            sa.Enum("DEVELOPMENT", "PROJECT_MANAGEMENT", "QUALITY_ASSURANCE", name="agentmodule"),
            nullable=False,
        ),
        sa.Column("tags", sa.JSON(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("system_prompt", sa.Text(), nullable=False),
        sa.Column("custom_properties_schema", sa.JSON(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("identifier"),
    )
    op.create_index(op.f("ix_ai_agents_name"), "ai_agents", ["name"], unique=False)
    op.create_table(
        "projects",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("created_by", sa.Integer(), nullable=False),
        sa.Column("updated_by", sa.Integer(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("project_metadata", sa.JSON(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("ix_projects_active_created_by", "projects", ["is_active", "created_by"], unique=False)
    op.create_index("ix_projects_created_by", "projects", ["created_by"], unique=False)
    op.create_index("ix_projects_name_created_by", "projects", ["name", "created_by"], unique=False)
    op.create_table(
        "user_agent_sessions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("created_by", sa.Integer(), nullable=False),
        sa.Column("updated_by", sa.Integer(), nullable=False),
        sa.Column("project_id", sa.Integer(), nullable=False),
        sa.Column("agent_id", sa.Integer(), nullable=False),
        sa.Column("messages", sa.JSON(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("mcps", sa.JSON(), nullable=False),
        sa.Column("custom_properties", sa.JSON(), nullable=False),
        sa.ForeignKeyConstraint(
            ["agent_id"],
            ["ai_agents.id"],
        ),
        sa.ForeignKeyConstraint(
            ["project_id"],
            ["projects.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("ix_sessions_user_agent", "user_agent_sessions", ["created_by", "agent_id"], unique=False)
    op.create_index("ix_sessions_user_project", "user_agent_sessions", ["created_by", "project_id"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("ix_sessions_user_project", table_name="user_agent_sessions")
    op.drop_index("ix_sessions_user_agent", table_name="user_agent_sessions")
    op.drop_table("user_agent_sessions")
    op.drop_index("ix_projects_name_created_by", table_name="projects")
    op.drop_index("ix_projects_created_by", table_name="projects")
    op.drop_index("ix_projects_active_created_by", table_name="projects")
    op.drop_table("projects")
    op.drop_index(op.f("ix_ai_agents_name"), table_name="ai_agents")
    op.drop_table("ai_agents")
    # Drop enums
    op.execute("DROP TYPE IF EXISTS agentidentifier")
    op.execute("DROP TYPE IF EXISTS agentmodule")
    # ### end Alembic commands ###
